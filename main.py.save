import telebot
import requests
from telebot import types
import pickle
import feedparser
import time
from time import sleep
import cherrypy
import config
import schedule
#from telebot import apihelper #–º–µ—Ç–æ–¥ —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ–∫—Å—è–º–∏ pip3 install python-telegram-bot[socks] pip3 install -U requests[socks]
#apihelper.proxy = {'https': 'socks5h://91440724:ginbvXfh@grsst.s5.opennetwork.cc:999'}
#apihelper.proxy = {	'https': 'mtproto://7nJrbiBodXkgc29zaXRlOilnb29nbGUuY29t:mtprxz.duckdns.org:443'}
#}  #–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏

WEBHOOK_HOST = 'uchenikoff.ru/ZZZZ/'
WEBHOOK_PORT = 443  # 443, 80, 88 –∏–ª–∏ 8443 (–ø–æ—Ä—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç!)
WEBHOOK_LISTEN = '0.0.0.0'  # –ù–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö –ø—Ä–∏–¥–µ—Ç—Å—è —É–∫–∞–∑—ã–≤–∞—Ç—å —Ç–∞–∫–æ–π –∂–µ IP, —á—Ç–æ –∏ –≤—ã—à–µ

#WEBHOOK_SSL_CERT = './webhook_cert.pem'  # –ü—É—Ç—å –∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—É
#WEBHOOK_SSL_PRIV = './webhook_pkey.pem'  # –ü—É—Ç—å –∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –∫–ª—é—á—É
#WEBHOOK_SSL_CERT = '/etc/letsencrypt/live/www.uchenikoff.ru/fullchain.pem'
#WEBHOOK_SSL_PRIV = '/etc/letsencrypt/live/www.uchenikoff.ru/privkey.pem'

WEBHOOK_URL_BASE = "https://%s" % (WEBHOOK_HOST)
WEBHOOK_URL_PATH = "/%s/" % (config.token)

bot=telebot.TeleBot(config.token)
#bot=telebot.TeleBot('591612755:AAGLQyZkmNUHNcqvcI1qsSE1KFez7J0qsjg')
feed_list =["https://schzg719.mskobr.ru/data/rss", "https://www.youtube.com/feeds/videos.xml?channel_id=UCv9aT7dS9XEN1N7qU0gWNOA",
            ]
last_feeds = pickle.load(open("db.p", 'rb'))
fee_links = []
users=[]
admin=91440724
c=()
#import os
#token = os.getenv("TOKEN")
#bot = telebot.TeleBot(token)
def get_users():
	global users
	f = open('users', 'r')
	m=(f.read())
	users=m.split(' ') #–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –ø—Ä–æ–±–µ–ª
	f.close()
	users.pop()#—É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ–±–µ–ª
		
get_users() #–≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–æ–≤
		
@bot.message_handler(commands=["start"])
def start(message):
	global users
	global c
	username=message.from_user.first_name #–∑–∞–ø–æ–º–∏–Ω–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	f = open('users', 'a') #–æ—Ç–∫—Ä—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É –Ω–∞ –¥–æ–∑–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏–π
	if str(message.chat.id) not in users: #–ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø–æ–≤—Ç–æ—Ä–æ–≤
			f.write(str(message.chat.id)+ ' ') #–∑–∞–ø–∏—Å–∞—Ç—å —Ç–µ—Ö –∫—Ç–æ –Ω–∞–∂–∞–ª —Å—Ç–∞—Ä—Ç
			bot.send_message(admin, "–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + str(message.chat.id) + ' ' + message.from_user.first_name)
	f.close()
	get_users()
	if message.chat.id==admin:
		c=ad_mainmenu
	else:
		c=mainmenu
	bot.send_chat_action(message.chat.id, 'typing')
	time.sleep(2)
	bot.send_sticker(message.chat.id, 'CAADAgADa1kAAp7OCwABtPtscVkaOGoWBA')
	bot.send_message(message.chat.id, "–†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å–≤–æ–≤–∞—Ç—å " + username + " –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –ø–æ–º–æ—à–Ω–∏–∫–µ. \n –í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞—à–µ–≥–æ —Å–∞–π—Ç–∞ –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–æ—Ü.—Å–µ—Ç–µ–π. –î–õ—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /stop, –¥–ª—è –ø–æ–≤—Ç–æ—Ä–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start. –ê –µ—â–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É, —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –æ–Ω –±—É–¥–µ—Ç –ø–æ—Å—ã–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –≤ –≥—Ä—É–ø–ø—É.", reply_markup=c)

@bot.message_handler(commands=["stop"])
def stop(message):
	global users
	global c
	username=message.from_user.first_name #–∑–∞–ø–æ–º–∏–Ω–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	f = open('users', 'r')
	m=(f.read())
	m=m.replace(str(message.chat.id) + ' ', '')
	f.close()
	f = open('users', 'w') #–æ—Ç–∫—Ä—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É –Ω–∞ –∑–∞–ø–∏—Å—å
	f.writelines(m)
	f.close()
	bot.send_message(admin, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø–∏—Å–∞–ª—Å—è " + str(message.chat.id) + ' ' + message.from_user.first_name)
	get_users()
		
@bot.message_handler(commands=['pereslat']) #—Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É pereslat
def pereslat(message):
	bot.send_message(message.chat.id, text="–ì–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å –ø–æ—Å–ª–∞–Ω–∏–µ –º–∏—Ä—É")
	bot.register_next_step_handler(message, get_pereslat) #–≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
	
def get_pereslat(message): #–µ—ë –≤—ã–∑—ã–≤–∞–ª–∏
	global users
	get_users
	print(message.media_group_id, users)
#	bot.forward_message(i, message.chat.id, message.message_id) #—Ñ–æ—Ä–≤–æ—Ä–¥–∏–º –ø–æ—Å–ª–∞–Ω–∏–µ
#	try:
#		print(message)
#	try:
#		print(message.json)
#	except:
#		print(message.photo)
#	if message.media_group_id==None:
#		for i in users: #–ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –º–∞—Å—Å–∏–≤—É
#			time.sleep(2)
#			try:
#				bot.forward_message(i, message.chat.id, message.message_id) #—Ñ–æ—Ä–≤–æ—Ä–¥–∏–º –ø–æ—Å–ª–∞–Ω–∏–µ
#			except:
#				print('bolt')
#	else:
#		print(2)
#		print(message.media_group_id)
#		for i in users: #–ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –º–∞—Å—Å–∏–≤—É
#			time.sleep(2)
#			try:
#				bot.sendMediaGroup(i, message.photo.file_id)
#			except:
#				print('bolt')
	for i in users: #–ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –º–∞—Å—Å–∏–≤—É
		time.sleep(2)
		try:
			bot.forward_message(i, message.chat.id, message.message_id) #—Ñ–æ—Ä–≤–æ—Ä–¥–∏–º –ø–æ—Å–ª–∞–Ω–∏–µ
		except:
			print('bolt')
	
@bot.message_handler(content_types=['text'])
def main(message):  # –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
	global c
	cousers=0
	cugrup=0
	global users
	if message.text == "–ü—Ä–∏–≤–µ—Ç" or message.text == "üè´–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" or message.text == "/main" or message.text == "/start":
		start(message)
	elif message.text == "üóì–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_sticker(message.chat.id, 'CAADAgADglkAAp7OCwABF1LyypVAYq0WBA')
		bot.send_message(message.chat.id, text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ \n [–°—Å—ã–ª–∫–∞](https://t.me/iv?url=https%3A%2F%2Fschzg719.mskobr.ru%2Finfo_add%2Fraspisanie-urokov&rhash=b48987ea0be3c5)", reply_markup=mainmenu, parse_mode='Markdown')
	elif message.text == "üñã–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—Ä—É–∂–æ–∫":
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_message(message.chat.id, text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—Ä—É–∂–æ–∫ \n [–°—Å—ã–ª–∫–∞](https://www.mos.ru/pgu/ru/application/dogm/077060701/#step_1)", reply_markup=mainmenu, parse_mode='Markdown')
	elif message.text == "üì≤–ü–æ–¥–∫–ª—é—á–∏—Ç—å —à–∫–æ–ª—å–Ω—ã–π WiFi":
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_sticker(message.chat.id, 'CAADAgADc1kAAp7OCwABUikOpbNvciIWBA')
		bot.send_message(message.chat.id, text="–ü–æ–¥–∫–ª—é—á–∏—Ç—å —à–∫–æ–ª—å–Ω—ã–π WiFi \n 	–®–∞–≥ –ø–µ—Ä–≤—ã–π –Ω–∞ –ü–æ—Ä—Ç–∞–ª–µ –≥–æ—Å—É–ª—É–≥ –Ω–∞–¥–æ –∏–º–µ—Ç—å —Å–≤–æ—é —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å, –∞ –Ω–µ —Ä–æ–¥–∏—Ç–µ–ª–µ–π. \n –®–∞–≥ –≤—Ç–æ—Ä–æ–π, –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Å–Ω–æ–º—É —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é. –ß—Ç–æ –±—ã —É —Ç–µ–±—è –±—ã–ª –¥–æ—Å—Ç—É–ø –≤ –î–Ω–µ–≤–Ω–∏–∫. \n	–®–∞–≥ —Ç—Ä–µ—Ç–∏–π –≤ –î–Ω–µ–≤–Ω–∏–∫–µ —Å–ø—Ä–∞–≤–∞ –≤–≤–µ—Ä—Ö—É —à–µ—Å—Ç–µ—Ä–µ–Ω–∫–∞. –í—Ö–æ–¥–∏–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ —É–∂–µ —Ç–∞–º –±—É–¥–µ—Ç –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ú–≠–® –∏ —à–∫–æ–ª—å–Ω–æ–≥–æ WiFi\n –®–∞–≥ –ø–æ—Å–ª–µ–¥–Ω–∏–π, –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –ø–ª–∞–Ω—à–µ—Ç –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —à–∫–æ–ª—å–Ω–æ–π –≤–∞—Ñ–ª–µ, —ç—Ç–æ —É–∂–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ \n	[–°—Å—ã–ª–∫–∞](https://t.me/iv?url=https%3A%2F%2Fuchebnik.mos.ru%2Fhelp%2Fstats%2Fwifi%2Fopenwifi&rhash=f33defb321a418)", reply_markup=mainmenu, parse_mode='Markdown')
	elif message.text == "üìö–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞":
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_sticker(message.chat.id, 'CAADAgADdFkAAp7OCwABOKfFBU7BxRQWBA')
		bot.send_message(message.chat.id, text="–ù–∞—à–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞", reply_markup=bibliomenu, parse_mode='Markdown')
	elif message.text == "‚òéÔ∏è–ö–æ–Ω—Ç–∞–∫—Ç—ã":
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_sticker(message.chat.id, 'CAADAgADelkAAp7OCwABYMZXStSxz9YWBA')
		bot.send_message(message.chat.id, text="–ö–æ–Ω—Ç–∞–∫—Ç—ã", reply_markup=contaktsmenu) 
	elif message.text == "üì¢–ù–æ–≤–æ—Å—Ç–∏":
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_message(message.chat.id, text="–ù–æ–≤–æ—Å—Ç–∏ —à–∫–æ–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞: \n [–°—Å—ã–ª–∫–∞](https://t.me/iv?url=https%3A%2F%2Fschzg719.mskobr.ru%2Fnovosti&rhash=b48987ea0be3c5)", reply_markup=mainmenu, parse_mode='Markdown')
	elif message.text == "üìñ–ö–Ω–∏–≥–∏ –∏ —É—á–µ–±–Ω–∏–∫–∏":
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_message(message.chat.id, text="–ö–Ω–∏–≥–∏ –∏ —É—á–µ–±–Ω–∏–∫–∏ \n [–°—Å—ã–ª–∫–∞](https://schzg719.mskobr.ru/info_add/uchebniki_i_uchebnye_posobiya)", reply_markup=bibliomenu, parse_mode='Markdown')
	elif message.text == "üßæ–ñ—É—Ä–Ω–∞–ª 8 –ê":
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_message(message.chat.id, text="–ñ—É—Ä–Ω–∞–ª –∫–ª–∞—Å—Å–∞ \n [–°—Å—ã–ª–∫–∞](https://t.me/iv?url=https%3A%2F%2Fschzg719.mskobr.ru%2Fedu-news%2F2401&rhash=b48987ea0be3c5)", reply_markup=bibliomenu, parse_mode='Markdown')
	elif message.text == "üëÅ‚Äçüó®–®–∫–æ–ª—å–Ω—ã–π —Å–∞–π—Ç":
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_message(message.chat.id, text="–®–∫–æ–ª—å–Ω—ã–π —Å–∞–π—Ç: \n [–°—Å—ã–ª–∫–∞](https://schzg719.mskobr.ru/)", reply_markup=contaktsmenu, parse_mode='Markdown')
	elif message.text == "üó£–°–æ—Ü—Å–µ—Ç–∏":
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_sticker(message.chat.id, 'CAADAgADfFkAAp7OCwABXIP9BynOq5UWBA', reply_markup=contaktsmenu)
		bot.send_message(message.chat.id, text="Youtube: \n [–°—Å—ã–ª–∫–∞](https://www.youtube.com/channel/UCv9aT7dS9XEN1N7qU0gWNOA/)", reply_markup=contaktsmenu, parse_mode='Markdown')
		bot.send_message(message.chat.id, text="Instagram: \n [–°—Å—ã–ª–∫–∞](https://www.instagram.com/s719zelao/)", reply_markup=contaktsmenu, parse_mode='Markdown')
		bot.send_message(message.chat.id, text="VK: \n [–°—Å—ã–ª–∫–∞](https://vk.com/s719zelao)", reply_markup=contaktsmenu, parse_mode='Markdown')
	elif message.text == "üì®–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—å—Å–º–æ":
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_sticker(message.chat.id, 'CAADAgADcVkAAp7OCwABOa0ndWVQ9koWBA')
		bot.send_message(message.chat.id, text="–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—å—Å–º–æ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é? \n 719@edu.mos.ru", reply_markup=contaktsmenu, parse_mode='Markdown')
	elif message.text == "üè´–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_message(message.chat.id, "–ß–µ–º –ø–æ–º–æ—á—å?", reply_markup=mainmenu)
	elif message.text == "–ê–¥–º–∏–Ω–∫–∞":
		if message.chat.id==admin:
			c=ad_pere
		else:
			c=mainmenu
		bot.send_message(message.chat.id, text="–° –±–æ–ª—å—à–æ–π —Å–∏–ª–æ–π –ø—Ä–∏—Ö–æ–¥–∏—Ç –±–æ–ª—å—à–∞—è –æ—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å!", reply_markup=c, parse_mode='Markdown')
	elif message.text == "üó£–ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º":
		if message.chat.id==admin:
			c=ad_pere
		else:
			c=mainmenu
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		pereslat(message)
		
	elif message.text == "üó£–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏–∑ rss":
		if message.chat.id==admin:
			c=ad_pere
		else:
			c=mainmenu
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(2)
		bot.send_message(message.chat.id, text="–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π", reply_markup=c, parse_mode='Markdown')
		feederek()
	elif message.text == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
		if message.chat.id==admin:
			c=ad_pere
		else:
			c=mainmenu
		get_users()
		for user in users:
			if int(user)<0:
				cugrup+=1
		cousers=len(users)-cugrup
		bot.send_message(message.chat.id, text="–í –±–æ—Ç–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É " + str(cousers) + " —á–µ–ª–æ–≤–µ–∫ –∏ " + str(cugrup) + " –≥—Ä—É–ø–ø", reply_markup=c, parse_mode='Markdown')
		cousers=0
		cogrup=0
		

@bot.message_handler(content_types=['voice'])
def voice_mess(message):  # –Ω–µ–Ω–∞–≤–∏–∂—É –≥–æ–ª–æ—Å–æ–≤—É—Ö–∏
	bot.send_chat_action(message.chat.id, 'typing')
	time.sleep(2)
	bot.send_sticker(message.chat.id, 'CAADAgADlVkAAp7OCwABfWS6BUi0NtUWBA')
	bot.send_message(message.chat.id, text='–ù–∏–∫—Ç–æ –Ω–µ –ª—é–±–∏—Ç –≥–æ–ª–æ—Å–æ–≤—É—Ö–∏.')
  
	

# –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é—à–µ–∫
ad_mainmenu = types.ReplyKeyboardMarkup(one_time_keyboard=False, resize_keyboard=True)
ad_pere = types.ReplyKeyboardMarkup(one_time_keyboard=False, resize_keyboard=True)
mainmenu = types.ReplyKeyboardMarkup(one_time_keyboard=False, resize_keyboard=True)
newsmenu = types.ReplyKeyboardMarkup(one_time_keyboard=False, resize_keyboard=True)
bibliomenu = types.ReplyKeyboardMarkup(one_time_keyboard=False, resize_keyboard=True)
contaktsmenu = types.ReplyKeyboardMarkup(one_time_keyboard=False, resize_keyboard=True)

# –æ–±—â–∏–µ –¥–ª—è –≤—Å–µ—Ö –º–µ–Ω—é –∫–Ω–æ–ø–∫–∏
btn_tomain = types.KeyboardButton("üè´–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

# –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –º–µ–Ω—é—à–µ–∫
admin_btn = types.KeyboardButton("–ê–¥–º–∏–Ω–∫–∞")
btn_news_lnk = types.KeyboardButton("–ù–æ–≤–æ—Å—Ç–∏ —à–∫–æ–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞")
btn_rasp = types.KeyboardButton("üóì–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
btn_news_rss = types.KeyboardButton("–ü—Ä–∏—Å—ã–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –≤ –ª–∏—á–∫—É –í–∫–ª.\–í—ã–∫–ª.")
btn_biblio_books = types.KeyboardButton("üìñ–ö–Ω–∏–≥–∏ –∏ —É—á–µ–±–Ω–∏–∫–∏")
btn_biblio_jurnal = types.KeyboardButton("üßæ–ñ—É—Ä–Ω–∞–ª 8 –ê")
btn_cont_link = types.KeyboardButton("üëÅ‚Äçüó®–®–∫–æ–ª—å–Ω—ã–π —Å–∞–π—Ç")
btn_cont_soc = types.KeyboardButton("üó£–°–æ—Ü—Å–µ—Ç–∏")
btn_cont_email = types.KeyboardButton("üì®–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—å—Å–º–æ")
btn_news = types.KeyboardButton("üì¢–ù–æ–≤–æ—Å—Ç–∏")
btn_kruz = types.KeyboardButton("üñã–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—Ä—É–∂–æ–∫")
btn_wifi = types.KeyboardButton("üì≤–ü–æ–¥–∫–ª—é—á–∏—Ç—å —à–∫–æ–ª—å–Ω—ã–π WiFi")
btn_biblio = types.KeyboardButton("üìö–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞")
btn_contacts = types.KeyboardButton("‚òéÔ∏è–ö–æ–Ω—Ç–∞–∫—Ç—ã")
btn_pereslat = types.KeyboardButton("üó£–ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º")
btn_feed = types.KeyboardButton("üó£–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏–∑ rss")
btn_stat = types.KeyboardButton("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")

# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é
ad_mainmenu.add(btn_news, btn_rasp, btn_biblio, btn_kruz, btn_wifi, btn_contacts, admin_btn)
ad_pere.add(btn_tomain, btn_pereslat, btn_feed, btn_stat)
mainmenu.add(btn_news, btn_rasp, btn_biblio, btn_kruz, btn_wifi, btn_contacts)
newsmenu.add(btn_tomain, btn_news_lnk, btn_news_rss)
bibliomenu.add(btn_tomain, btn_biblio_books, btn_biblio_jurnal)
contaktsmenu.add(btn_tomain, btn_cont_link, btn_cont_soc, btn_cont_email)

def feederek():
		for i in feed_list:
			fee = feedparser.parse(i)
			fee_title = fee.feed.title
			for x in range(2):
				fee_links.append(fee['entries'][x]['id'])
				if fee['entries'][x]['id'] in last_feeds:
					entry_title = fee['entries'][x]['title']
					entry_id = fee['entries'][x]['id']
					entry_link = fee['entries'][x]['link']
					bot.send_message(admin, "Nothing new - " + entry_title)
				else:
					sleep(4)
					entry_title = fee['entries'][x]['title']
					entry_id = fee['entries'][x]['id']
					entry_link = fee['entries'][x]['link']
					bot.send_message(admin, "Updated - " + entry_title)
					message = str(entry_title +"\n" + str(entry_link))
					for i in users:
						time.sleep(4)
						try:
							bot.send_message(i, text=message)
						except:
							print('Bolt')
			pickle.dump(fee_links, open("db.p", 'wb'))
		return

schedule.every().day.at('09:00').do(feederek) #–∑–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä—Å—Å –ø–æ –≤—Ä–µ–º–µ–Ω–∏
schedule.every().day.at('15:00').do(feederek)
#while True:
#	schedule.run_pending()

# –°–Ω–∏–º–∞–µ–º –≤–µ–±—Ö—É–∫ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π (–∏–∑–±–∞–≤–ª—è–µ—Ç –æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ–±–ª–µ–º)
bot.remove_webhook()

# –°—Ç–∞–≤–∏–º –∑–∞–Ω–æ–≤–æ –≤–µ–±—Ö—É–∫
bot.set_webhook(url=WEBHOOK_URL_BASE,
                certificate=open(WEBHOOK_SSL_CERT, 'r'))
# –ù–∞—à –≤–µ–±—Ö—É–∫-—Å–µ—Ä–≤–µ—Ä
#class WebhookServer(object):
#    @cherrypy.expose
#    def index(self):
#        if 'content-length' in cherrypy.request.headers and \
#                        'content-type' in cherrypy.request.headers and \
#                        cherrypy.request.headers['content-type'] == 'application/json':
#            length = int(cherrypy.request.headers['content-length'])
#            json_string = cherrypy.request.body.read(length).decode("utf-8")
#            update = telebot.types.Update.de_json(json_string)
#            # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
#            bot.process_new_updates([update])
#            return ''
#        else:
#            raise cherrypy.HTTPError(403)

class WebhookServer(object):
    # index —Ä–∞–≤–Ω–æ–∑–Ω–∞—á–Ω–æ /, —Ç.–∫. –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—é —á–∞—Å—Ç–∏ –ø–æ—Å–ª–µ ip-–∞–¥—Ä–µ—Å–∞ (–≥—Ä—É–±–æ –≥–æ–≤–æ—Ä—è)
    @cherrypy.expose
    def index(self):
        length = int(cherrypy.request.headers['content-length'])
        json_string = cherrypy.request.body.read(length).decode("utf-8")
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return ''#

if __name__ == '__main__':
    cherrypy.config.update({
        'server.socket_host': '127.0.0.1',
        'server.socket_port': 7772,
        'engine.autoreload.on': False
    })
    cherrypy.quickstart(WebhookServer(), '/', {'/': {}})

# –£–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ CherryPy
#cherrypy.config.update({
#    'server.socket_host': WEBHOOK_LISTEN,
#    'server.socket_port': WEBHOOK_PORT,
#    'server.ssl_module': 'builtin',
#    'server.ssl_certificate': WEBHOOK_SSL_CERT,
#    'server.ssl_private_key': WEBHOOK_SSL_PRIV
#})

 # –°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ, –∑–∞–ø—É—Å–∫!
#cherrypy.quickstart(WebhookServer(), WEBHOOK_URL_PATH, {'/': {}})
